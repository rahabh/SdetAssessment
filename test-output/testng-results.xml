<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="10" passed="6" failed="1" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-19T17:02:31 IST" name="Suite" finished-at="2025-06-19T17:04:21 IST" duration-ms="109536">
    <groups>
    </groups>
    <test started-at="2025-06-19T17:02:31 IST" name="ChromeTest" finished-at="2025-06-19T17:03:13 IST" duration-ms="41689">
      <class name="tests.testcase1">
        <test-method is-config="true" signature="mainBeforeTestMethod()[pri:0, instance:tests.testcase1@1800a575]" started-at="2025-06-19T17:02:31 IST" name="mainBeforeTestMethod" finished-at="2025-06-19T17:02:32 IST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainBeforeTestMethod -->
        <test-method is-config="true" signature="beforeMethodMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.testcase1@1800a575]" started-at="2025-06-19T17:02:32 IST" name="beforeMethodMethod" finished-at="2025-06-19T17:02:37 IST" duration-ms="5001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.testcase1.verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodMethod -->
        <test-method signature="verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty()[pri:0, instance:tests.testcase1@1800a575]" started-at="2025-06-19T17:02:37 IST" name="verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty" finished-at="2025-06-19T17:02:43 IST" duration-ms="6902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.testcase1@1800a575]" started-at="2025-06-19T17:02:43 IST" name="afterMethod" finished-at="2025-06-19T17:02:44 IST" duration-ms="617" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty status=SUCCESS method=testcase1.verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty()[pri:0, instance:tests.testcase1@1800a575] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethodMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.testcase1@1800a575]" started-at="2025-06-19T17:02:44 IST" name="beforeMethodMethod" finished-at="2025-06-19T17:02:48 IST" duration-ms="3831" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.testcase1.verifyTheValueofHighAndLowInLast52WeeksForRelianceCom()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodMethod -->
        <test-method signature="verifyTheValueofHighAndLowInLast52WeeksForRelianceCom()[pri:0, instance:tests.testcase1@1800a575]" started-at="2025-06-19T17:02:48 IST" name="verifyTheValueofHighAndLowInLast52WeeksForRelianceCom" finished-at="2025-06-19T17:02:58 IST" duration-ms="10356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheValueofHighAndLowInLast52WeeksForRelianceCom -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.testcase1@1800a575]" started-at="2025-06-19T17:02:58 IST" name="afterMethod" finished-at="2025-06-19T17:03:00 IST" duration-ms="1789" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheValueofHighAndLowInLast52WeeksForRelianceCom status=SUCCESS method=testcase1.verifyTheValueofHighAndLowInLast52WeeksForRelianceCom()[pri:0, instance:tests.testcase1@1800a575] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethodMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.testcase1@1800a575]" started-at="2025-06-19T17:03:00 IST" name="beforeMethodMethod" finished-at="2025-06-19T17:03:03 IST" duration-ms="3232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.testcase1.verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodMethod -->
        <test-method signature="verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors()[pri:0, instance:tests.testcase1@1800a575]" started-at="2025-06-19T17:03:03 IST" name="verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors" finished-at="2025-06-19T17:03:11 IST" duration-ms="8117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.testcase1@1800a575]" started-at="2025-06-19T17:03:11 IST" name="afterMethod" finished-at="2025-06-19T17:03:12 IST" duration-ms="556" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors status=SUCCESS method=testcase1.verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors()[pri:0, instance:tests.testcase1@1800a575] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.testcase1@1800a575]" started-at="2025-06-19T17:03:12 IST" name="afterTest" finished-at="2025-06-19T17:03:13 IST" duration-ms="988" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.testcase1 -->
    </test> <!-- ChromeTest -->
    <test started-at="2025-06-19T17:03:13 IST" name="FireFoxTest" finished-at="2025-06-19T17:03:31 IST" duration-ms="18436">
      <class name="tests.testcase1">
        <test-method is-config="true" signature="mainBeforeTestMethod()[pri:0, instance:tests.testcase1@50d13246]" started-at="2025-06-19T17:03:13 IST" name="mainBeforeTestMethod" finished-at="2025-06-19T17:03:13 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainBeforeTestMethod -->
        <test-method is-config="true" signature="beforeMethodMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.testcase1@50d13246]" started-at="2025-06-19T17:03:13 IST" name="beforeMethodMethod" finished-at="2025-06-19T17:03:21 IST" duration-ms="7733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.testcase1.verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodMethod -->
        <test-method retried="true" signature="verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty()[pri:0, instance:tests.testcase1@50d13246]" started-at="2025-06-19T17:03:21 IST" name="verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty" finished-at="2025-06-19T17:03:21 IST" duration-ms="649" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://www.nseindia.com/index-tracker/NIFTY%2050] but found [about:blank]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://www.nseindia.com/index-tracker/NIFTY%2050] but found [about:blank]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageEvents.NiftyFiftyPageEvents.verifyNiftyFiftyUrl(NiftyFiftyPageEvents.java:28)
at tests.testcase1.verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty(testcase1.java:72)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.testcase1@50d13246]" started-at="2025-06-19T17:03:21 IST" name="afterMethod" finished-at="2025-06-19T17:03:23 IST" duration-ms="1215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty status=SKIP method=testcase1.verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty()[pri:0, instance:tests.testcase1@50d13246] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethodMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.testcase1@50d13246]" started-at="2025-06-19T17:03:23 IST" name="beforeMethodMethod" finished-at="2025-06-19T17:03:28 IST" duration-ms="5612" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.testcase1.verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodMethod -->
        <test-method signature="verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty()[pri:0, instance:tests.testcase1@50d13246]" started-at="2025-06-19T17:03:28 IST" name="verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty" finished-at="2025-06-19T17:03:29 IST" duration-ms="539" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://www.nseindia.com/index-tracker/NIFTY%2050] but found [about:blank]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://www.nseindia.com/index-tracker/NIFTY%2050] but found [about:blank]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageEvents.NiftyFiftyPageEvents.verifyNiftyFiftyUrl(NiftyFiftyPageEvents.java:28)
at tests.testcase1.verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty(testcase1.java:72)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.testcase1@50d13246]" started-at="2025-06-19T17:03:29 IST" name="afterMethod" finished-at="2025-06-19T17:03:29 IST" duration-ms="125" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty status=FAILURE method=testcase1.verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty()[pri:0, instance:tests.testcase1@50d13246] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class com.aventstack.extentreports.ExtentTest cannot be cast to class com.aventstack.extentreports.markuputils.Markup (com.aventstack.extentreports.ExtentTest and com.aventstack.extentreports.markuputils.Markup are in unnamed module of loader 'app')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class com.aventstack.extentreports.ExtentTest cannot be cast to class com.aventstack.extentreports.markuputils.Markup (com.aventstack.extentreports.ExtentTest and com.aventstack.extentreports.markuputils.Markup are in unnamed module of loader 'app')
at base.BaseTest.afterMethod(BaseTest.java:82)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethodMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.testcase1@50d13246]" started-at="2025-06-19T17:03:29 IST" name="beforeMethodMethod" finished-at="2025-06-19T17:03:29 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodMethod -->
        <test-method signature="verifyTheValueofHighAndLowInLast52WeeksForRelianceCom()[pri:0, instance:tests.testcase1@50d13246]" started-at="2025-06-19T17:03:29 IST" name="verifyTheValueofHighAndLowInLast52WeeksForRelianceCom" finished-at="2025-06-19T17:03:29 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class com.aventstack.extentreports.ExtentTest cannot be cast to class com.aventstack.extentreports.markuputils.Markup (com.aventstack.extentreports.ExtentTest and com.aventstack.extentreports.markuputils.Markup are in unnamed module of loader 'app')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class com.aventstack.extentreports.ExtentTest cannot be cast to class com.aventstack.extentreports.markuputils.Markup (com.aventstack.extentreports.ExtentTest and com.aventstack.extentreports.markuputils.Markup are in unnamed module of loader 'app')
at base.BaseTest.afterMethod(BaseTest.java:82)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheValueofHighAndLowInLast52WeeksForRelianceCom -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.testcase1@50d13246]" started-at="2025-06-19T17:03:29 IST" name="afterMethod" finished-at="2025-06-19T17:03:29 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors()[pri:0, instance:tests.testcase1@50d13246]" started-at="2025-06-19T17:03:29 IST" name="verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors" finished-at="2025-06-19T17:03:29 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class com.aventstack.extentreports.ExtentTest cannot be cast to class com.aventstack.extentreports.markuputils.Markup (com.aventstack.extentreports.ExtentTest and com.aventstack.extentreports.markuputils.Markup are in unnamed module of loader 'app')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class com.aventstack.extentreports.ExtentTest cannot be cast to class com.aventstack.extentreports.markuputils.Markup (com.aventstack.extentreports.ExtentTest and com.aventstack.extentreports.markuputils.Markup are in unnamed module of loader 'app')
at base.BaseTest.afterMethod(BaseTest.java:82)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors -->
        <test-method is-config="true" signature="beforeMethodMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.testcase1@50d13246]" started-at="2025-06-19T17:03:29 IST" name="beforeMethodMethod" finished-at="2025-06-19T17:03:29 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.testcase1@50d13246]" started-at="2025-06-19T17:03:29 IST" name="afterTest" finished-at="2025-06-19T17:03:31 IST" duration-ms="2025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.testcase1@50d13246]" started-at="2025-06-19T17:03:29 IST" name="afterMethod" finished-at="2025-06-19T17:03:29 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.testcase1 -->
    </test> <!-- FireFoxTest -->
    <test started-at="2025-06-19T17:03:32 IST" name="EdgeTest" finished-at="2025-06-19T17:04:21 IST" duration-ms="49332">
      <class name="tests.testcase1">
        <test-method is-config="true" signature="mainBeforeTestMethod()[pri:0, instance:tests.testcase1@e70f13a]" started-at="2025-06-19T17:03:32 IST" name="mainBeforeTestMethod" finished-at="2025-06-19T17:03:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainBeforeTestMethod -->
        <test-method is-config="true" signature="beforeMethodMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.testcase1@e70f13a]" started-at="2025-06-19T17:03:32 IST" name="beforeMethodMethod" finished-at="2025-06-19T17:03:36 IST" duration-ms="4885" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.testcase1.verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodMethod -->
        <test-method signature="verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty()[pri:0, instance:tests.testcase1@e70f13a]" started-at="2025-06-19T17:03:36 IST" name="verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty" finished-at="2025-06-19T17:03:43 IST" duration-ms="6521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.testcase1@e70f13a]" started-at="2025-06-19T17:03:43 IST" name="afterMethod" finished-at="2025-06-19T17:03:45 IST" duration-ms="1660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty status=SUCCESS method=testcase1.verifyTheValueofHighAndLowInLast52WeeksForAnyStocksOfNiftyFifty()[pri:0, instance:tests.testcase1@e70f13a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethodMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.testcase1@e70f13a]" started-at="2025-06-19T17:03:45 IST" name="beforeMethodMethod" finished-at="2025-06-19T17:03:49 IST" duration-ms="4576" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.testcase1.verifyTheValueofHighAndLowInLast52WeeksForRelianceCom()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodMethod -->
        <test-method signature="verifyTheValueofHighAndLowInLast52WeeksForRelianceCom()[pri:0, instance:tests.testcase1@e70f13a]" started-at="2025-06-19T17:03:49 IST" name="verifyTheValueofHighAndLowInLast52WeeksForRelianceCom" finished-at="2025-06-19T17:04:03 IST" duration-ms="13894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheValueofHighAndLowInLast52WeeksForRelianceCom -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.testcase1@e70f13a]" started-at="2025-06-19T17:04:03 IST" name="afterMethod" finished-at="2025-06-19T17:04:05 IST" duration-ms="1504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheValueofHighAndLowInLast52WeeksForRelianceCom status=SUCCESS method=testcase1.verifyTheValueofHighAndLowInLast52WeeksForRelianceCom()[pri:0, instance:tests.testcase1@e70f13a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethodMethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:tests.testcase1@e70f13a]" started-at="2025-06-19T17:04:05 IST" name="beforeMethodMethod" finished-at="2025-06-19T17:04:10 IST" duration-ms="5264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.testcase1.verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodMethod -->
        <test-method signature="verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors()[pri:0, instance:tests.testcase1@e70f13a]" started-at="2025-06-19T17:04:10 IST" name="verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors" finished-at="2025-06-19T17:04:18 IST" duration-ms="8469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.testcase1@e70f13a]" started-at="2025-06-19T17:04:18 IST" name="afterMethod" finished-at="2025-06-19T17:04:21 IST" duration-ms="2448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors status=SUCCESS method=testcase1.verifyTheValueofHighAndLowInLast52WeeksForStockTataMotors()[pri:0, instance:tests.testcase1@e70f13a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.testcase1@e70f13a]" started-at="2025-06-19T17:04:21 IST" name="afterTest" finished-at="2025-06-19T17:04:21 IST" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.testcase1 -->
    </test> <!-- EdgeTest -->
  </suite> <!-- Suite -->
</testng-results>
